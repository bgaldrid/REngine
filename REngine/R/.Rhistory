setClass(class = "material", representation = list(MEAN = "numeric",
                             SD = "numeric",
                             SKEWNESS = "numeric",
                             KURTOSIS = "numeric",
                             N = "integer"))

0
?setClass

setClass(Class = "material", representation = list(MEAN = "numeric",
                             SD = "numeric",
                             SKEWNESS = "numeric",
                             KURTOSIS = "numeric",
                             N = "integer"))


material = function(...)
{
    require(moments)
    out = new(Class = "material")
    D = list(...)
    out = data.frame(MEAN = sapply(D,mean),
               SD = sapply(D, sd),
               SKEWNESS = sapply(D, skewness),
               KURTOSIS = sapply(D, kurtosis),
               N = sapply(D, length))
}

material(weight = c(19,20,19,20,21,22,18), density = c(1,2,1,3,4,1,3,4,2,6,2,3,2))
temp = material(weight = c(19,20,19,20,21,22,18), density = c(1,2,1,3,4,1,3,4,2,6,2,3,2))
temp
material(weight = c(19,20,19,20,21,22,18), density = c(1,2,1,3,4,1,3,4,2,6,2,3,2))

setClass(Class = "material",
         representation = list(MEAN = "numeric", SD = "numeric", SKEWNESS = "numeric", KURTOSIS = "numeric", N = "integer"),
         contains = "data.frame")

material(weight = c(19,20,19,20,21,22,18), density = c(1,2,1,3,4,1,3,4,2,6,2,3,2))
temp = material(weight = c(19,20,19,20,21,22,18), density = c(1,2,1,3,4,1,3,4,2,6,2,3,2))
temp
plot(temp)
class(temp)

setClass(Class = "material",
         representation = list(MEAN = "numeric", SD = "numeric", SKEWNESS = "numeric", KURTOSIS = "numeric", N = "integer"))
temp = material(weight = c(19,20,19,20,21,22,18), density = c(1,2,1,3,4,1,3,4,2,6,2,3,2))
temp
class(temp)
temp2 = new(Class = "material")
temp2

material = function(...)
{
    require(moments)
    D = list(...)
    new(Class = "material", MEAN = sapply(D,mean),
               SD = sapply(D, sd),
               SKEWNESS = sapply(D, skewness),
               KURTOSIS = sapply(D, kurtosis),
               N = sapply(D, length))
}

temp = material(weight = c(19,20,19,20,21,22,18), density = c(1,2,1,3,4,1,3,4,2,6,2,3,2))
temp
class(temp)

setClass(Class = "material",
         representation = list(MEAN = "numeric", SD = "numeric", SKEWNESS = "numeric", KURTOSIS = "numeric", N = "integer"),
         contains = "data.frame")

temp = material(weight = c(19,20,19,20,21,22,18), density = c(1,2,1,3,4,1,3,4,2,6,2,3,2))
temp
class(temp)

material = function(...)
{
    require(moments)
    D = list(...)
    new(Class = "material", MEAN = sapply(D,mean),
               SD = sapply(D, sd),
               SKEWNESS = sapply(D, skewness),
               KURTOSIS = sapply(D, kurtosis),
               N = sapply(D, length))
}

temp = material(weight = c(19,20,19,20,21,22,18), density = c(1,2,1,3,4,1,3,4,2,6,2,3,2))
temp

setClass(Class = "material",
         representation = list(MEAN = "numeric", SD = "numeric", SKEWNESS = "numeric", KURTOSIS = "numeric", N = "integer"))

temp = material(weight = c(19,20,19,20,21,22,18), density = c(1,2,1,3,4,1,3,4,2,6,2,3,2))
temp

setMethod(f = "print",definition = function(D)
      {
          print(data.frame(D@MEAN, D@SD, D@SKEWNESS, D@KURTOSIS, D@N))
      })
temp
temp = material(weight = c(19,20,19,20,21,22,18), density = c(1,2,1,3,4,1,3,4,2,6,2,3,2))
temp
print(temp)
0
0
temp@MEAN
class(temp@MEAN)
data.frame(D@MEAN, D@SD, D@SKEWNESS, D@KURTOSIS, D@N)
0
D=temp
data.frame(D@MEAN, D@SD, D@SKEWNESS, D@KURTOSIS, D@N)
0
0

setMethod(f = "print",definition = function(D)
      {
          print(data.frame(MEAN = D@MEAN, SD = D@SD, SKEWNESS = D@SKEWNESS, KURTOSIS = D@KURTOSIS, N = D@N))
      })
temp
print(temp)
0
0

setMethod(f = "print",definition = function(D)
      {
          print(data.frame(slot(D, "MEAN")))
      })
temp
temp
print(temp)
0
0
slot(temp, "MEAN")
slot(temp, "MEAN")+1
print(slot(temp, "MEAN"))
0
0
1
print(1)
0
0

setMethod(f = "print", signiture = "material", definition = function(D)
      {
          print(data.frame(slot(D, "MEAN")))
      })
0

setMethod(f = "print", signature = "material", definition = function(D)
      {
          print(data.frame(slot(D, "MEAN")))
      })

0
q()
debug()
0
source("test.R")
0
q()
source("test.R")
1
ls()
Q
source("test.R")
ls()
geom
materials
method
n
print(n)
N
startX
startR
Q
source("test.R")
ls()
Rrange
startR
n
up
ls()
0
ls()
n
up
n
n
tl
low
n
n
n
n
n
n
values
n
values
n
num
n
n
num
n
cluster
n
13
ls()
envir
inherits
mode
pos
x
Q
ls()
q()
source("test.R")
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
environment()
n
Q
source("test.R")
0
q()
source("test.R")
0
q()
source("test.R")
6
ls()
x
Q
q()
source("test.R")
8
ls()
6
ls()
x
class(x)
5
ls()
FS
Q
q()
